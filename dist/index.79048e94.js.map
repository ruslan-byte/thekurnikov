{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-3dc445a7b7c60360.js","core/music.js","node_modules/howler/dist/howler.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7dfb4bb579048e94\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import {Howl, Howler} from 'howler';\n\nexport var music = {\n\tsound: null,\n\tvolume: 0.03,\n\tinit()\n\t{\n\t\tif(!this.sound)\n\t\t\tthis.sound = new Howl({\n\t\t\t\tsrc: [`musicBackground/${getRandomInt(19)}.mp3`],\n\t\t\t\tvolume: this.volume,\n\t\t\t\tloop: true,\n\t\t\t\tautoplay: true,\n\t\t\t\thtml5:true,\n\t\t\t});\n\t},\n\tmute() {\n\t\tthis.sound.volume(0)\n\t},\n\tunmute() {\n\t\tthis.sound.volume(this.volume)\t\n\t}\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.79048e94.js.map","sourceRoot":"/__parcel_source_root/"}